; Based on Default_6.0
#>----------------------------------- GLOBALS -----------------------------------------
version 6.0
use_pngs 1
tcp_showborders 0
mcp_showborders 0
transport_showborders 0
tcp_vupeakwidth 2
mcp_vupeakheight 2
mcp_mastervupeakheight 4
mcp_altmeterpos 0
use_overlays 1
tcp_vol_zeroline FF999999
tcp_pan_zeroline 66000000
mcp_vol_zeroline FF666666
mcp_pan_zeroline 85000000
trans_speed_zeroline 85000000
gen_vol_zeroline FF000000
gen_pan_zeroline FF000000
item_volknobfg 85000000 FF778485 00474F4F
mcp_min_height 240
mcp_voltext_flags 5 5
tcp_voltext_flags 12
tinttcp 298
peaksedges 0
no_meter_reclbl 1
tcp_master_minheight 60
tcp_heights 4 42 42 43   ; supercollapsed, collapsed, small(norecarm), recarm size
tcp_folderindent 0
envcp_min_height 27
misc_dpi_translate 134 150
misc_dpi_translate 174 200


; ----------------- WALTER -------------------

; Global stuff : here are some often-used lines, set as definitions

set width_visible              trackpanmode<4 [0] trackpanmode==6 [2] [1]  ; can be ==3 instead of <4 if width desired for 3.x
set gl_pan_color               width_visible{0}!=2 [0 0 0 120] [84 63 63]
set gl_width_color             width_visible{0}==1 [255 255 255 210] [63 84 63]
set gl_fader_swap              width_visible{0}==2 [0] [1]

set scale 1


#<
#>---------------------------- TRACK CONTROL PANELS -----------------------------------

clear tcp.*

macro resetHides
    set hideValues          0
    set hide_tcp.recarm     0
    set hide_tcp.recmon     0
    set hide_tcp.label      0
    set hide_tcp.volume     0
    set hide_tcp.io         0
    set hide_fx_group       0
    set hide_tcp.env        0
    set hide_pan_group      0
    set hide_tcp.recmode    0
    set hide_input_group    0
    set hide_values         0
    set hide_meter_values   0
endMacro

macro calcTcpSecs
    set element_h                 15  ; supercollapsed threshold is a bit smaller than the actual element size, in case our non-supercollapsed size is small due to UI scaling
    set supercollapsed            h<element_h{0} 1 0
    set element_h                 20
    set tcp_padding               [7 7]
    set tcp_LabelSize_min         30
    set tcp_LabelSize             tcp_LabelPair{0}==0 tcpLabelAutoMeasured{0}<tcp_LabelSize_min{0} tcp_LabelSize_min{0} + tcpLabelAutoMeasured{0} 10 tcp_LabelPair
    set tcp_PanSize               width_visible{0}==0 20 43
    set this_tcp_indent           * tcp_indent{0} folderdepth{0}
    set soloFlip_h                44 ; height to switch solo&mute from stacked to side-by-side
    set folder_sec                tcp_control_align{0}==1 \
                                      + [0 0 20] * [0 0 1] * tcp_indent{0} maxfolderdepth{0} \
                                      + [0 0 20] * [0 0 1] * tcp_indent{0} folderdepth{0}
    set tcp_MeterSize_min         18
    set meter_sec                 + + + + [0 0 tcp_MeterSize{0}] [0 0 33] [folder_sec{2} 0 0 h] h<soloFlip_h{0} tcp_MeterSize{0}<tcp_MeterSize_min{0} [0 0 40] [0] [0] [0]
    set meterRight                tcp_MeterLoc{0}<2 tcp_MeterLoc{0} ?recarm 0 1
    set meter_sec                 ?meterRight{0} - [w  0 meter_sec meter_sec] [meter_sec{2}]
    set main_sec                  + - - [folder_sec{2} 0 w h] [0 0 folder_sec{2}] [0 0 meter_sec{2}] !meterRight{0} [meter_sec{2}] [0]
    set tcp_LabelSize             tcp_control_align{0}==2 + - tcp_LabelSize{0} * tcp_indent{0} folderdepth{0} * maxfolderdepth{0} tcp_indent{0} ; extend names for fist line alignment
    set labelEnd                  + tcp_LabelSize{0} 54 ; tune 54 by eye. Sorry.
    set labelFlip                 main_sec{2}<labelEnd{0} 1 0
    set mainCollapse_w            90
    set mainCollapse              main_sec{2}<mainCollapse_w{0} 1 0 ; collapse main_sec to enough for a flipped label if its too small to be useful, then scale meter to fill the gap
    set main_sec                  ?supercollapsed{0} [0] ?mainCollapse{0} ?meterRight{0} \
                                                                              [folder_sec{2} 0 element_h{0} h] \
                                                                              - [w 0 element_h{0} h] [element_h{0}] \
                                                                          ?labelFlip{0} - main_sec [0 0 element_h{0}] main_sec ; reduce main_sec if label is flipped
    set main_eff                  ?mainCollapse{0} 0 main_sec{2} ; effective width of main_sec, used to determine row end
    set meter_sec                 ?supercollapsed{0} [0] ?mainCollapse{0} ?meterRight{0} \
                                      - + [main_sec 0 w h] [main_sec{2} 0] + [0 0 main_sec{0}] [0 0 main_sec] \
                                      - - [folder_sec{2} 0 w h] [0 0 folder_sec] [0 0 20]

    set tcp_size                  [360 160]
    set tcp.size                  [tcp_size tcp_size]
    set tcp_w                     tcp_size{0}

    set tcp_LabelSize             ?labelFlip{0} [0]   ; not included in mainsec calculations if flipped
    set tcp_squash_height         + + 20 tcp_padding{1} tcp_padding{1}
    set h_less_border             - h 1
    set tcp_padding               h_less_border{0}<tcp_squash_height{0} + [tcp_padding] * [0 1] / - h_less_border{0} element_h 2
    set tcpNullElement            + [main_sec] + [tcp_padding tcp_padding] [0 0 0 20]
    set previous_element          tcpNullElement      ; Let's start at the very beginning. A very good place to start.
    
    set meter_sec                 + - meter_sec [0 0 12 0] [8]
    set meter_sec                 ?mainCollapse{0}  - [main_sec 0 w h] [0 0 main_sec{0}]
    
    ; >>>> [VARS]
    set track_idx_off             main_sec{0}
    
    set tcp_pad_left              h<44   4  6
    set tcp_pad_left              w<243  4
    set tcp_pad_right             h<44   8  12

    set row1_y                    6
    set row2_y                    40
    set row3_y                    76
    set row4_y                    102
    set row5_y                    134
    set row6_y                    160

    set row4_y                    h<138  row3_y

    set btn_h                     20
    set btn_h2                    30
    set label_h                   30

    set readout_w                 80
    set mute_solo_w               32
    set fx_w                      30
    set env_w                     61
    set io_w                      51
    set pan_w                     30
    set recmon_w                  30
endMacro


macro drawTcp
    set OSoffs                                  os_type==1 [0 2 0 -2]
    set tcp.foldercomp                          ?supercollapsed{0} [0] + + [this_tcp_indent] [folder_sec] [0 0 18 19]
    set tcp.folder                              ?supercollapsed{0} [0] + [this_tcp_indent 60] [folder_sec 86 18 14 0 1 0 1]
      set tcp_folder_min                        32
      set tcp.folder                            h<tcp_folder_min{0} folderstate<0 . [0] .
    set tcp.trackidx                            + + [0 0 this_tcp_indent 60] [folder_sec 0 0 0 0 0 0 1] [0 0 18 100]
    set tcp.trackidx                            ?supercollapsed{0} + tcp.trackidx [0 0 0 40]
    set tcp.mute                                   + + [meter_sec] [meter_sec{2}] h>=soloFlip_h{0} [-25 3 21 20] + [0 tcp_padding] [-43 0 21 20]
    set tcp.solo                                h>=soloFlip_h{0} + + [0 2] tcp.mute [0 tcp.mute{3}] \
                                                               - + tcp.mute [tcp.mute{2}] [2]
    set phaseHide_h                             + + + 4 element_h tcp.solo{1} tcp.solo{3}
    set tcp.phase                               h<phaseHide_h{0} [0] + [3 -24 16 20] [tcp.mute meter_sec{3}]
    set tcp.meter                               meter_sec
      set tcp.meter.vu.div                      [1]
    set tcp.label                               ?labelFlip{0} + [main_sec 0 1 -2] [main_eff{0} 0 element_h{0} h]
    set tcp.fx                                  !fx_group{2} [0] + [fx_group fx_group] + [0 0 20] [0 0 0 element_h{0}]
    set tcp.fxbyp                               !fx_group{2} [0] + + [tcp.fx tcp.fx] [tcp.fx{2}] + [0 0 16] [0 0 0 element_h{0}]
    set tcp.fxin                                !input_group{2} [0] + [input_group input_group] + [0 0 29] [0 0 0 element_h{0}]
    set tcp.recinput                            !input_group{2} [0] - + + [tcp.fxin tcp.fxin] [tcp.fxin{2} 0 input_group] [0 0 0 element_h{0}] [0 0 tcp.fxin{2}]
    set tcp.pan                                 !pan_group{2} [0 0 0 0] width_visible{0}==2 \
                                                    * [pan_group pan_group pan_group pan_group element_h{0}] [1 1 1 0.5] \
                                                    [pan_group pan_group element_h{0} element_h{0}] ; knobs have the same h and w
    set tcp.pan.fadermode                       1
    set tcp.width                               width_visible{0}==0 [0] !pan_group{2} [0 0 0 0] width_visible{0}==2 \
                                                    + [tcp.pan tcp.pan tcp.pan tcp.pan] [0 tcp.pan{3}] \
                                                    - + [pan_group pan_group element_h{0} element_h{0}] [pan_group{2}] [element_h{0}]
    set tcp.width.fadermode                     1
    set tcp.volume.fadermode                    0
    set hideValues                              ?hide_values{0} 1 .
    set values_sec                              hideValues{0}==1 [0] + [main_sec main_sec_last{0} main_sec] [0 0 0 9]
    set tcp.volume.label                        !values_sec{0} [0] + + [0 -2 42 2] [values_sec values_sec 0 values_sec] [tcp_padding]
    set tcp.width.label                            !values_sec{0} [0] main_eff{0}<122 [0] width_visible{0}==0 [0]  + + [0 -2 36 2] [values_sec values_sec 0 values_sec] - [values_sec{2}] + [36] [tcp_padding]
    set tcp.pan.label                           !values_sec{0} [0] main_eff{0}<122 [0] + + [0 -2 36 2] [values_sec values_sec 0 values_sec] - [values_sec{2}] + + [36] [tcp_padding] [tcp.width.label{2}]

    ; x-axis label hiding
    set tcpVolLabelSpace                        + tcp.volume.label{2} tcp_padding{0}
    set tcp.volume.label                        main_sec{2}<tcpVolLabelSpace{0} [0] .
    set tcpPanLabelSpace                        + + + tcp.volume.label{2} tcp_padding{0} tcp.pan.label{2} tcp.width.label{2}
    set tcp.pan.label                           main_sec{2}<tcpPanLabelSpace{0} [0] .
    set tcpWidthLabelSpace                      + + tcp.volume.label{2} tcp_padding{0} tcp.width.label{2}
    set tcp.width.label                         main_sec{2}<tcpWidthLabelSpace{0} [0] .

    set tcp.dragdropinfo                        + [this_tcp_indent this_tcp_indent] [0 tcp_indent{0}]
    set tcp.fxparmArea                              - + + + [main_sec main_sec_last{0}] [tcp_padding] hideValues{0}==1 [0] + [0 values_sec{3}] [0 tcp_padding] \
                                                    + - - [0 0 main_sec] [0 0 tcp_padding{0}] [0 0 tcp_padding{0}] \
                                                    - - - [0 0 0 main_sec] [0 0 0 main_sec_last{0}] [0 0 0 tcp_padding{1}] hideValues{0}==1 [0] + [0 0 0 values_sec] [0 0 0 tcp_padding{1}] \
                                                    ?labelFlip{0} [0 0 element_h{0}] [0]
    set tcp.fxparm                              ?tcp_sepSends{0} * tcp.fxparmArea [1 1 0.666 1] tcp.fxparmArea 
    set tcp.sendlist                            ?tcp_sepSends{0} + * tcp.fxparmArea [1 1 0.333 1] [tcp.fxparm{2}] [0]
    
    ; >>>> Fonts/Colors/Margins
    ; Tahoma-Bold-10
    set tcp.label.font                          [3]
    set tcp.trackidx.font                       [3]
    ; Tahoma-Bold-11
    set tcp.volume.label.font                   [2]
    set tcp.pan.label.font                      [2]
    ; Calibri-8
    set tcp.width.label.font                    [1]
    set tcp.sendlist.font                       [1 24 100 100 -1 0 1 4]
    set tcp.fxparm.font                         [1 24 100 100 -1 0 1 4]
    set tcp.fxparm.font                         + . os_type==1 [0 0 0 0 3] [0]

    set tcp.trackidx.color                      ?track_selected [50 50 50] .
    set tcp.recinput.color                      ?track_selected [255 255 255] [225 225 225]
    set tcp.label.color                         [255 255 255]
    set tcp.volume.color                        [0 0 0 255 220 20 20 255]
    set tcp.volume.label.color                  [0 0 0]
    set tcp.pan.color                           [0 0 0 255 220 20 20 255]
    set tcp.pan.label.color                     [0 0 0]
    set tcp.width.color                         [0 0 0 255 220 20 20 255]
    set tcp.width.label.color                   [0 0 0]
    set tcp.meter.readout.color                 [255 255 255]

    ; scale labels filled/unfilled colors
    set tcp.meter.scale.color.lit.bottom        [0 0 0 255]
    set tcp.meter.scale.color.lit.top           [0 0 0 255]
    set tcp.meter.scale.color.unlit.bottom      [255 255 255 255]
    set tcp.meter.scale.color.unlit.top         [255 255 255 255]
    
    set tcp_idx_margin                          - / h 2 18
    set tcp.trackidx.margin                     + [this_tcp_indent] + [0 tcp_idx_margin 0 tcp_idx_margin 0.5] folderstate<0 [0 -6 0 6] folderstate==1 [0 16] 0
    set tcp.label.margin                        + OSoffs + [4 1 2 2 0]  h<44 [4] [0]
    set tcp.recinput.margin                     [0 0 20 0 0.5]
    set tcp.volume.label.margin                 [0 1 0 0 0]
    set tcp.width.label.margin                  + [0 1] + OSoffs [0 0 0 0 1]
    set tcp.pan.label.margin                    tcp.width.label.margin
    set tcp.fxparm.margin                       [3 0 3 0 0 14 0.5 6]
    set tcp.pan.label.margin                    [0]
    
    ; >>>> ROW_1
    set tcp.recarm                  + [track_idx_off]  [tcp_pad_left row1_y 30 btn_h2]

    set label_off                   h<44   + [track_idx_off] [tcp_pad_left]  + tcp.recarm{x} tcp.recarm{w}
    set label_w                     - - - - tcp_w  tcp.meter{w}  label_off{0}  * 2 tcp_pad_left  recmon_w
    set label_w                     h<44   - + - label_w  * 2 mute_solo_w  recmon_w  4
    set label_w                     w<243  + label_w  recmon_w

    set tcp.label                   + + [label_off]  [0 0 label_w{0}]  [0 row1_y -4 label_h 0 0 1 0]
    set tcp.recmon                  + - - - [tcp_w]  [tcp.meter{w}]    [tcp_pad_right]  [recmon_w]  [0 row1_y recmon_w btn_h2 1 0 1 0]

    ; >>>> ROW_2
    set tcp.mute                    +   [track_idx_off] [tcp_pad_left row2_y mute_solo_w btn_h2]
    set tcp.solo                    + + [tcp.mute{x}]   [tcp.mute{w}] [0 row2_y mute_solo_w btn_h2]

    set tcp.fx                      + + [tcp.solo{x}]   [tcp.solo{w}]  [tcp_pad_left row2_y fx_w btn_h2]
    set tcp.fxbyp                   + + [tcp.fx{x}]     [tcp.fx{w}]    [0 row2_y 24 btn_h2]

    set tcp.env                     + + [tcp.fxbyp{x}]  [tcp.fxbyp{w}]  [tcp_pad_left row2_y env_w btn_h2]
    set tcp.io                      + + [tcp.env{x}]    [tcp.env{w}]    [tcp_pad_left row2_y io_w btn_h2]

    ; >>>> ROW_3
    set tcp.recmode                 +   [track_idx_off]   [tcp_pad_left row3_y 39 btn_h]
    set tcp.fxin                    + + [tcp.recmode{x}]  [tcp.recmode{w}]   [tcp_pad_left row3_y 29 btn_h]
    set tcp.recinput                + + [tcp.fxin{x}]     [tcp.fxin{w}]      [0 row3_y 100 btn_h]
    set tcp.phase                   + + [tcp.recinput{x}] [tcp.recinput{w}]  [tcp_pad_left row3_y 16 btn_h]

    ; >>>> ROW_4
    set volume_w                    - - - - tcp_w track_idx_off tcp.meter{w} * 2 tcp_pad_left pan_w
    set volume_w                    w<243  + + volume_w  pan_w  * 0.5 tcp_pad_left
    set tcp.volume                  + [track_idx_off 0 volume_w{0}]  [tcp_pad_left row4_y -10 btn_h2 0 0 1 0]

    set tcp.pan                     + - - - [tcp_w]  [tcp.meter{w}]  [tcp_pad_right]  [pan_w]  [0 row4_y pan_w btn_h2 1 0 1 0]

    ; >>>> ROW_5
    set tcp.volume.label            + [track_idx_off]  [6 row5_y readout_w 20]
    set tcp.pan.label               + - - [tcp_w] [tcp.meter{w}]  - [readout_w] [20]  [0 row5_y readout_w 20 1 0 1 0]
endMacro


macro applyTcpHideRules
    set tcp.io                       w<320  [0]

    set tcp.env                      w<263  [0]
    set tcp.phase                    w<263  [0]

    set tcp.recmon                   w<243  [0]
    set tcp.recinput                 w<243  [0]
    set tcp.fxin                     w<243  [0]
    set tcp.pan                      w<243  [0]

    set tcp.fx                       w<193  [0]
    set tcp.fxbyp                    w<193  [0]
    set tcp.pan.label                w<193  [0]

    set tcp.recarm                   ?mainCollapse{0}  [0]
    set tcp.label                    ?mainCollapse{0}  [0]
    set tcp.mute                     ?mainCollapse{0}  [0]
    set tcp.solo                     ?mainCollapse{0}  [0]
    set tcp.recmode                  ?mainCollapse{0}  [0]
    set tcp.volume                   ?mainCollapse{0}  [0]
    set tcp.volume.label             ?mainCollapse{0}  [0]

    set tcp.volume.label             h<155  [0]
    set tcp.pan.label                h<155  [0]

    set tcp.recmode                  h<138  [0]
    set tcp.fxin                     h<138  [0]
    set tcp.recinput                 h<138  [0]
    set tcp.phase                    h<138  [0]

    set tcp.volume                   h<112  [0]
    set tcp.pan                      h<112  [0]

    set tcp.mute                     h<75   [0]
    set tcp.solo                     h<75   [0]
    set tcp.fx                       h<75   [0]
    set tcp.fxbyp                    h<75   [0]
    set tcp.env                      h<75   [0]
    set tcp.io                       h<75   [0]

    set tcp.recarm                   h<44   [0]
    set tcp.recmon                   h<44   [0]

    set tcp.label                    h<44  w<243  [0]

    ; stick to the right edge
    set tcp.solo                     h<44   + - - - [tcp_w]  [tcp.meter{w}]  [tcp_pad_right]  [mute_solo_w]  [-4 row1_y mute_solo_w btn_h2 1 0 1 0]
    set tcp.mute                     h<44   - [tcp.solo{x}  row1_y  mute_solo_w  btn_h2 1 0 1 0]  [mute_solo_w]

    ; restore the left edge anchor
    set tcp.mute                     h<44 w<243 ?mainCollapse{0}  [0]  + + [track_idx_off]  [tcp_pad_left]  [0 row1_y mute_solo_w btn_h2]
    set tcp.solo                     h<44 w<243 ?mainCollapse{0}  [0]  + + [tcp.mute{x}]    [tcp.mute{w}]   [0 row1_y mute_solo_w btn_h2]
endMacro

;-------------
front                          tcp.recarm tcp.label tcp.volume tcp.solo tcp.mute tcp.phase tcp.width tcp.foldercomp tcp.folder

set tcp_indent                 20
set tcp_control_align          0
set tcpLabelAutoMeasured       100

set tcp_MeterLoc               1
set tcp_LabelPair              110
set tcp_sepSends               0
set tcp_MeterSize              10

;-------------
calcTcpSecs
drawTcp
applyTcpHideRules



#<
#>------------------------- MASTER TRACK CONTROL PANEL --------------------------------

macro calcMasterTcpSecs scale
    set element_h                               * scale 20
    set tcp_MeterSize_s                         * scale tcp_MeterSize
    set mTcp_PanSize                            width_visible{0}==0 20 43
    set meter_flip_v                            * scale [100 130 183]   ;[narrow_width flip_height flip_height(narrow)]
    set meter_flip                              w>meter_flip_v{0} h<meter_flip_v{1} [1] [0] h<meter_flip_v{2} [1] [0]
    set meterRight                              tcp_MeterLoc{0}
    set meter_sec                               !meter_flip{0} [0] !meterRight{0} \
                                                    * scale + [0 4 50 -1] [0 0 tcp_MeterSize_s h] \
                                                    + - + * scale [-33 0 33] [0 0 tcp_MeterSize_s h] [tcp_MeterSize_s] [w]
    set vol_sec                                 !meter_flip{0} [0] !meterRight{0} \
                                                    + - [meter_sec{2} h w] [0 0 meter_sec{2}] * scale [3 -20 -2 21] \
                                                    - + [0 h w] * scale [0 -22 -3 22] [0 0 meter_sec{2}]
    set main_sec                                ?meter_flip{0} \
                                                    !meterRight{0} \
                                                        - - - [meter_sec{2} 0 w h] * scale [0 6] [0 0 meter_sec{2}] [0 0 0 vol_sec] \
                                                        - - [0 0 w h] * scale [6 6] [0 0 meter_sec{2} vol_sec] \
                                                    - - [0 0 w h] * scale [0 6] [0 0 0 meter_sec]
    set main_eff                                main_sec{2}
    set mainCollapse_h                          * scale 64
    set mainCollapse                            main_sec{2}<mainCollapse_h{0} 1 0
    set tcp_padding                             * scale [7 7]
    set tcpNullElement                          + + [main_sec main_sec] [tcp_padding tcp_padding] * scale [0 6 0 20]
    set previous_element                        tcpNullElement
endMacro


macro drawMasterTcp scale
    set master.tcp.size                         * scale [300 100 40 60]
    set main_sec                                !meter_flip{0} + [0 0 0 this_y_end{0}] * scale [0 0 0 8]  ; recalculate sections now we know this_y_end
    set vol_sec                                 !meter_flip{0} + [0 main_sec{3} w tcp_padding{1}] * scale [0 0 0 22] .
    set meter_sec                               ?mainCollapse{0} [0 0 w h] !meter_flip{0} tcp_fxparms>0 \
                                                                                                    + [0 vol_sec w 70] [0 vol_sec{3}] \
                                                                                                    - - + [0 vol_sec w h] [0 vol_sec{3}] [0 0 0 main_sec] [0 0 0 vol_sec]
    set master.tcp.meter                        - - + meter_sec * scale [5 2 -5 -5] [0 0 tcp.mute{2}] [0 0 tcp_padding{0}]
      set master.tcp.meter.vu.div                    [1]
      set master.tcp.meter.readout.color             [100 100 100 255 255 183 171 255]
      set master.tcp.meter.scale.color.lit.bottom    [0 0 0 200 0 0 0 0]
      set master.tcp.meter.scale.color.lit.top       [0 0 0 200 0 0 0 0]
      set master.tcp.meter.scale.color.unlit.bottom  [255 255 255 120 0 0 0 0]
      set master.tcp.meter.scale.color.unlit.top     [255 255 255 120 0 0 0 0]
    set master.tcp.mute                         + + [meter_sec meter_sec] [meter_sec{2}] * scale [-25 4 21 20]
    set master.tcp.solo                         + + * scale [0 2] master.tcp.mute [0 master.tcp.mute{3}]
    set master.tcp.label.color                  tcp.label.color
    set master.tcp.label.font                   scale{0}==1 [3] scale{0}==1.5 [8] [13]
    set master.tcp.volume                       ?mainCollapse{0} [0] + vol_sec * scale + [0 0 -1 -2] * ?meter_flip{0} [1 0 -1 0] [1 0 -1 -1] [1 0 1 3]
        set volume_fader_w                      * 21 scale
        set master.tcp.volume.fadermode         master.tcp.volume{w}>volume_fader_w{0} [0] [1]
        set master.tcp.volume.color             [0 0 0]
    set master.tcp.fx                           !master_fx_group{2} [0] + * scale [0 0 20] [master_fx_group master_fx_group 0 element_h{0}]
    set master.tcp.fxbyp                        !master_fx_group{2} [0] + + * scale [0 0 16] [master.tcp.fx master.tcp.fx 0 element_h{0}] [master.tcp.fx{2}]
    set master.tcp.pan                          !master_pan_group{2} [0 0 0 0] width_visible{0}==2 \
                                                    * [master_pan_group master_pan_group master_pan_group master_pan_group element_h{0}] [1 1 1 0.5] \
                                                    [master_pan_group master_pan_group element_h{0} element_h{0}] ; knobs have the same h and w
        set master.tcp.pan.fadermode            gl_fader_swap
        set master.tcp.pan.color                gl_pan_color
    set master.tcp.width                        width_visible{0}==0 [0] !master_pan_group{2} [0 0 0 0] width_visible{0}==2 \
                                                    + [master.tcp.pan master.tcp.pan master.tcp.pan master.tcp.pan] [0 master.tcp.pan{3}] \
                                                    - + [master_pan_group master_pan_group element_h{0} element_h{0}] [master_pan_group{2}] [element_h{0}]
        set master.tcp.width.fadermode          gl_fader_swap
        set master.tcp.width.color              gl_pan_color
    set hideValues                              ?mainCollapse{0} 1 ?hide_values{0} 1 . .    
    set main_val_color                          ?track_selected [160 160 160] [115 115 115]
    set master.tcp.volume.label                 hideValues{0}==1 [0] + + * scale [0 -9 40 9] [main_sec main_sec{3}] - [tcp_padding] [0 tcp_padding]
        set master.tcp.volume.label.margin      [0 1 0 0 0]
        set master.tcp.volume.label.color       main_val_color
        set master.tcp.volume.label.font        scale{0}==1 [1] scale{0}==1.5 [6] [11]
    set master.tcp.width.label                  hideValues{0}==1 [0] main_eff{0}<122 [0] width_visible{0}==0 [0] + [main_sec master.tcp.volume.label] - + [main_eff{0}] * scale [-36 0 36 9] [tcp_padding]
        set master.tcp.width.label.margin       + [0 0 0 0 1] * scale [0 1]
        set master.tcp.width.label.color        width_visible{0}!=2 main_val_color [90 130 90]
        set master.tcp.width.label.font         master.tcp.volume.label.font
    set master.tcp.pan.label                    hideValues{0}==1 [0] main_eff{0}<86 [0] + [main_sec master.tcp.volume.label] - - + [main_eff{0}] * scale [-36 0 36 9] [tcp_padding] [master.tcp.width.label{2}]
        set master.tcp.pan.label.margin         + [0 0 0 0 1] * scale [0 1]
        set master.tcp.pan.label.color          width_visible{0}!=2 main_val_color [130 90 90]
        set master.tcp.pan.label.font           master.tcp.volume.label.font                                    +   
    set master.tcp.fxparm                       - + + [0 meter_sec w h] [0 meter_sec{3}] [0 tcp_padding] + + [0 0 0 meter_sec{1}] [0 0 0 meter_sec{3}] [0 0 0 tcp_padding{1}] 
    set master.tcp.fxparm.font                      scale{0}==1 [1 24 100 100 -1 0 1 4] scale{0}==1.5 [6 36 150 150 -4 0 2 6] [11 48 200 200 -6 0 2 8]
        set master.tcp.fxparm.font              + . os_type==1 * scale [0 0 0 0 3] [0]
    set master.tcp.fxparm.margin                * scale [3 0 3 0 0 14]
endMacro


set tcp_MeterSize  22
set tcp_MeterLoc   1

;-------------
calcMasterTcpSecs
drawMasterTcp


; >>>> [VARS]
set master_tcp_pad  6
set mrow1_y  6
set mrow2_y  28
set mrow3_y  68
set mrow4_y  104

set meter_sec  + - [w] [35] [0 0 31 h]
set meter_sec  w<153  - [23 0 w h] [0 0 23]


; >>>> Fonts/Colors
set master.tcp.volume.label.color  [220 220 220]
set master.tcp.volume.label.font   [2]
set master.tcp.pan.label.color     [220 220 220]
set master.tcp.pan.label.font      [2]
set master.tcp.label.color         [220 220 220]


set master.tcp.meter   meter_sec

; >>>> ROW_1
set master.tcp.label         [8 8 60 10]
set master.tcp.label.margin  [0 0 0 0 0]

set master.tcp.mono     + - [w]  [master.tcp.meter{w}]  [-66 4 50 btn_h]


; >>>> ROW_2
set master.tcp.mute     [master_tcp_pad mrow2_y mute_solo_w btn_h2]
set master.tcp.solo     + + [master.tcp.mute{x}]   [master.tcp.mute{w}]   [0 mrow2_y mute_solo_w btn_h2]

set master.tcp.fx       + + [master.tcp.solo{x}]   [master.tcp.solo{w}]   [master_tcp_pad mrow2_y fx_w btn_h2]
set master.tcp.fxbyp    + + [master.tcp.fx{x}]     [master.tcp.fx{w}]     [0 mrow2_y 24 btn_h2]

set master.tcp.env      + + [master.tcp.fxbyp{x}]  [master.tcp.fxbyp{w}]  [master_tcp_pad mrow2_y env_w btn_h2]
set master.tcp.io       + + [master.tcp.env{x}]    [master.tcp.env{w}]    [master_tcp_pad mrow2_y io_w btn_h2]


; >>>> ROW_3
set mvolume_w           - - - w master.tcp.meter{w} 20  w<241  0  + pan_w 6
set master.tcp.volume   [6 mrow3_y mvolume_w{0} btn_h2]
set master.tcp.pan      + + + [master.tcp.volume{x}]  [master.tcp.volume{w}]  [6 master.tcp.volume{y} pan_w btn_h2]


; >>>> ROW_4
set master.tcp.volume.label      [8 mrow4_y 80 20]
set master.tcp.pan.label         + - [w]  [master.tcp.meter{w}]  [-100 mrow4_y 80 20]


; >>>> Hide rules
set master.tcp.io             w<297  [0]
set master.tcp.env            w<241  [0]
set master.tcp.pan            w<241  [0]
set master.tcp.pan.label      w<241  [0]
set master.tcp.mono           w<174  [0]
set master.tcp.fx             w<174  [0]
set master.tcp.fxbyp          w<174  [0]

set master.tcp.label          w<153  [0]
set master.tcp.mute           w<153  [0]
set master.tcp.solo           w<153  [0]
set master.tcp.volume         w<153  [0]
set master.tcp.volume.label   w<153  [0]

set master.tcp.label          w<153  [4 0 8 h]
set master.tcp.label.margin   w<153  [0 0 0 0 0.5]


set master.tcp.volume.label   h<123  [0]
set master.tcp.pan.label      h<123  [0]

set master.tcp.volume         h<100  [0]
set master.tcp.pan            h<100  [0]




#<
#> -------------------------- ENVELOPE CONTROL PANELS ---------------------------------

macro calcEnvSecs scale
    set envcp.size                              * scale [300 100]
    set element_h                               * scale 20
    set envcp_padding                           * scale [7 7]
    set values_w                                * scale 60
    set envcp_squash_height                     + + * scale 20 envcp_padding{1} envcp_padding{1}
    set valuesFlipH                             + + envcp_squash_height * scale 13 envcp_padding{1}
    set h_less_border                           - h 1
    set envcp_padding                           h_less_border{0}<envcp_squash_height{0} + [envcp_padding] * [0 1] / - h_less_border{0} element_h * scale 2
    set envLabelMin                             * scale 30
    set Envcp_labelSize                         EnvcpLabelSize{0}==0 EnvLabelAutoMeasured{0}<envLabelMin{0} envLabelMin{0} + EnvLabelAutoMeasured{0} * scale 10 EnvcpLabelSize
    set this_envcp_indent                       + ?EnvFolderIndent{0} * * scale tcp_indent{0} folderdepth{0} [0] * scale [-3 0 -6] ; subtracting 3px to match the lack of visible borders
    set main_sec                                - + * [1 0 -1] this_envcp_indent [0 0 w h] h<valuesFlipH{0} [0 0 values_w 0] + * scale [0 0 0 13] [0 0 0 envcp_padding{1}]
    set values_sec                              h<valuesFlipH{0} + + [main_sec envcp_padding{1} values_w{0}] [main_sec{2}] * scale [0 4 0 13] + [0 main_sec{3} w] * scale [0 0 0 13]
    set envcpNullElement                        + + [main_sec] [envcp_padding envcp_padding] * scale [0 0 0 20]
    set previous_element                        envcpNullElement        ; Let's start at the very beginning. A very good place to start.
    set addCont                                 envcp_type==4 [30 1] [0 0]
endMacro

macro envThen element width use_padding
    ; apply scale
    set s_width             * width scale

    set prev_end            + [previous_element] [previous_element{2}]                                  ; find the end of the previous element
    set element             [prev_end previous_element s_width element_h]                                   ; ...and place the element there

    ; x-axis
    set element             ?use_padding + [envcp_padding]                                              ; if x-padding is required, add it
    set this_end            - + + [element] [element{2}] [envcp_padding] [main_sec]                     ; okay, and what does that make the x-end of this element, realtive to main_sec?

    ; y-axis
    set next_row            + [0 element] [0 previous_element{3}]                                       ; find the y of the next row
    set element             this_end{0}>main_sec{2} + [main_sec next_row element element] envcp_padding ; move it to the next row
    set this_end            - + + [element] [element{2}] [envcp_padding] [main_sec]                     ; recalculate this_end, now that the element is on a new row
    set element             this_end{0}>main_sec{2} [. . 0 .]                                           ; ... and cull if there's still not enough main_sec width to fit
    set this_y_end          + + element{1} element{3} envcp_padding{1}                                  ; find its bottom
    set element             this_y_end{0}>main_sec{3} [0] !previous_element{1} [0] .                    ; cull if there's not enough height to fit, or if previous_element was culled
    set main_sec_last       element{3}>0 this_y_end{0} .

    ; values readout control
    set valuesRoom          - - main_sec{3} this_y_end{0} envcp_padding{1}                              ; is the remaining height after this element enough for the values to fit?
    set hideValues          valuesRoom{0}<8 element{3}!=0 [1] .                                         ; if not, and this element isn't already hidden, cull the values

    set previous_element element
endmacro

macro drawEnvcp scale
    set envcp.label.color                       [184 184 184]
        set envcp.label.margin                  * scale [2 0 2 0 0]
        set envcp.label.font                    scale{0}==1 [1] scale{0}==1.5 [6] [11]
    set envcp.value                             + values_sec [0 0 0 4]
        set envcp.value.font                    scale{0}==1 [1] scale{0}==1.5 [6] [11]
        set envcp.value.color                   [92 184 169]
        set envcp.value.margin                  * [0 0 scale 0 1] [0 0 7 0 1]
    set envcp.fader.color                       [54 217 190]
        set env_fader_w                         * 21 scale
        set envcp.fader.fadermode               envcp.fader{w}>env_fader_w{0} [0] [1]
endMacro


set EnvcpLabelSize         140
set EnvcpVolSize           20
set EnvLabelAutoMeasured   100
set EnvFolderIndent        1

clear envcp.*
front       envcp.fader


;-------------
calcEnvSecs

;    element                size    padding?
envThen envcp.arm           20          0
envThen envcp.bypass        15          0
envThen envcp.label   envcp_labelSize   0
envThen envcp.fader    EnvcpVolSize     0
envThen envcp.mod       addCont{0}  addCont{1}
envThen envcp.learn     addCont{0}  addCont{1}
envThen envcp.hide          36          1

set values_sec   h<valuesFlipH{0}   - [values_sec values_sec values_sec values_sec] [0 3]

;-------------
drawEnvcp

set envcp.value.font  [2]
set envcp.value       w<70  [0]



#<
#>---------------------------------- THE MIXER ----------------------------------------

macro doModeLogic variable paramIdx
    set variable param##paramIdx##&1 ?track_selected 1 0
    set variable param##paramIdx##&2 !track_selected 1 variable
    set variable param##paramIdx##&4 ?recarm 1 variable
    set variable param##paramIdx##&8 !recarm 1 variable
endmacro

macro drawMcp scale
    set hide_inputFX_s                          * scale hide_inputFX
    set hide_input_s                            * scale hide_input
    set hide_pan_labels_s                       * scale hide_pan_labels
    set hide_pan_s                              * scale hide_pan
    set hide_volume_label_s                     * scale hide_volume_label
    set extmixer_w_s                            * scale extmixer_w

    set mcp_indent_s                            * scale mcp_indent
    set mcp_meterExp_s                          * scale mcp_meterExp

    clear mcp.*
    front                                       mcp.label mcp.volume.label mcp.volume mcp.recarm mcp.recmon mcp.mute mcp.solo mcp.env mcp.io mcp.phase mcp.width mcp.trackidx mcp.folder
    set mcp_meterExp_s                          ?meterExpMode{0} . 1
    set panLabelsMode                           h<hide_pan_labels_s{x} 0 labelsMode
    set gapmode                                 mcp_border{0}<1 0 \
                                                    mcp_border{0}==1 1 \
                                                    mcp_border{0}==2 2 \
                                                    mcp_border{0}==3 folderstate==1 folderdepth==0 1 0 folderstate<0 folderdepth==1 2 0 0 \
                                                    folderstate==1 1 folderstate<0 2 0
    set nchan_offs                              ?meterExpMode{0} * - tracknch 2 mcp_meterExp_s [0]
    set nchan_offs_half                         / nchan_offs 2
    set nchan_offs_third                        / nchan_offs 3
    set nchan_offs_twothird                     * nchan_offs_third 2
    set mcp.size                                + + \
                                                    +   ?narrowMode{0} \
                                                            * scale [54 371] \
                                                            * scale [86 371] \
                                                        mcp_meterExp_s{0}>0 [nchan_offs{0}] [0] \
                                                        +   gapmode{0}>=1 * scale [14] [0] \
                                                    !sidebarMode{0} [0] [extmixer_w_s] \
                                                    * [0 0 0 scale{0}] + 180 * mcp_maxfolderdepth mcp_indent_s ; set the min height
    set sidebar_sec                             + + [0 0 0 0] gapmode{0}>=1 gapmode{0}!=2 * scale [0 0 14] [0] [0] !sidebarMode{0} [0] [0 0 extmixer_w_s{0}]
    set fx_sec                                  + [sidebar_sec{2} 0 mcp.size{0}] * scale [0 0 0 33]
    set pan_sec                                 + [sidebar_sec{2} fx_sec{3} mcp.size{0}] * scale !panLabelsMode{0} h<hide_pan_s{0} [0 0 0 6] [0 0 0 28] [0 0 0 48]
    set in_sec                                  + + [sidebar_sec{2} pan_sec{1}] [0 pan_sec{3} mcp.size{0}] * scale h<hide_input_s{0} [0 0 0 22] h<hide_inputFX_s{0} [0 0 0 42] [0 0 0 54]
    set bot_sec_height                          ?mcp_control_align{0} \
                                                    + * scale 47 * mcp_maxfolderdepth mcp_indent_s \
                                                    + * scale 47 * folderdepth mcp_indent_s
    set bot_sec                                 - [0 h mcp.size{0} bot_sec_height{0}] [0 bot_sec_height{0}]
    set stretch_sec_start                       + + fx_sec{3} pan_sec{3} in_sec{3}
    set stretch_sec_height                      - - - - h fx_sec{3} pan_sec{3} in_sec{3} bot_sec{3}
    set stretch_sec                             [sidebar_sec{2} stretch_sec_start{0} mcp.size{0} stretch_sec_height{0}]
    set sidebar_sec                             + + + sidebar_sec [0 0 0 stretch_sec{1}] [0 0 0 stretch_sec{3}] [0 0 0 1]
    set padding_reduction_h                     * scale [300 200]
    set padding                                 * scale stretch_sec_height{0}<padding_reduction_h{0} stretch_sec_height{0}<padding_reduction_h{1} [0 2] [0 3] [0 4]
    set mcp.extmixer.mode                       !sidebarMode{0} [0] [1]
    set mcp.extmixer.position                   + + sidebar_sec + [1 0 1] * scale [0 2 0 -2] gapmode{0}>=1 gapmode{0}!=2 * scale [13 0 -13] [0] [0]
        set mcp.fxlist.font                     scale==1 [1 16 0 0 0 0 1 4] scale==1.5 [6 24 0 0 0 0 2 6] [11 32 0 0 0 0 2 8]
        set mcp.fxlist.margin                   * [scale scale scale scale 1 scale] [4 0 4 0 0.5 14]
        set mcp.sendlist.font                   scale==1 [1 16 0 0 0 0 1 4] scale==1.5 [6 24 0 0 0 0 2 6] [11 32 0 0 0 0 2 8]
        set mcp.sendlist.margin                 * scale [4 0 4 0 0 0 14]
        set mcp.fxparm.font                     scale{0}==1 [1 24 0 0 -1] scale{0}==1.5 [6 36 0 0 -4] [11 48 0 0 -6]
        set mcp.fxparm.font                     + . os_type==1 * scale [0 0 0 0 3] [0]
        set mcp.fxparm.margin                   * scale [2 0 4 0 0 14]
    set mcp.fx                                  + [fx_sec 0 nchan_offs_twothird{0}] * scale ?narrowMode{0} [4 7 28 20] [7 7 43 20]
    set mcp.fxbyp                               + + [mcp.fx mcp.fx nchan_offs_third{0}] [mcp.fx{2}] * scale ?narrowMode{0} [0 0 19 20] [0 0 29 20]

    set mcp.pan                                 ?narrowMode{0} \
                                                    h<hide_pan_s{0} [0] + [pan_sec pan_sec]     width_visible{0}==2     + [0 0 nchan_offs{0}] * scale !panLabelsMode{0} [3 6 48 9] [3 15 48 9] \
                                                                                                width_visible{0}!=0     + [nchan_offs_third{0}] * scale !panLabelsMode{0} [28 4 20 20] [26 7 20 20] \
                                                                                                                    + [nchan_offs_half{0}] * scale !panLabelsMode{0} [18 4 20 20] [18 7 20 20] \
                                                    h<hide_pan_s{0} [0] + [pan_sec pan_sec]     width_visible{0}==2     + [0 0 nchan_offs{0}] * scale !panLabelsMode{0} [7 6 73 9] [7 15 73 9] \
                                                                                            width_visible{0}!=0     + [nchan_offs_third{0}] * scale !panLabelsMode{0} [20 4 20 20] [20 7 20 20] \
                                                                                            + [nchan_offs_half{0}] * scale !panLabelsMode{0} [33 4 20 20] [33 7 20 20]
      set mcp.pan.fadermode                     gl_fader_swap
      set mcp.pan.color                         gl_pan_color
      set mcp.pan.label                         ?narrowMode{0} \
                                                    !panLabelsMode{0} [0] + [pan_sec mcp.pan] width_visible{0}!=0 width_visible{0}==2 + [nchan_offs_half{0}] * scale [11 -11 35 9] + [nchan_offs_half{0}] h<hide_input_s{0} [0] * scale [17 25 35 10] + [nchan_offs_half{0}] * scale [10 25 35 10] \
                                                    !panLabelsMode{0} [0] + [pan_sec mcp.pan] width_visible{0}!=0 width_visible{0}==2 + [nchan_offs_half{0}] * scale [23 -11 40 9] + [nchan_offs_third{0}] * scale [8 25 35 10] + [nchan_offs_half{0}] * scale [26 25 35 10]
      set mcp.pan.label.color                   val_color
      set mcp.pan.label.font                    scale==1 [1] scale==1.5 [6] [11]
      set mcp.pan.label.margin                  [0 0 0 0 0.5]
    set mcp.width                               ?narrowMode{0} \
                                                    h<hide_pan_s{0} [0] + [pan_sec pan_sec]     width_visible{0}==2     + [0 0 nchan_offs{0}] * scale !panLabelsMode{0} [3 14 48 9] [3 23 48 9] \
                                                                                                width_visible{0}!=0     + [nchan_offs_third{0}] + [nchan_offs_third{0}] !panLabelsMode{0} * scale [7 20 20 20] h<hide_input{0} [9 31 20 20] [9 46 20 20] [0] \
                                                    h<hide_pan_s{0} [0] + [pan_sec pan_sec]     width_visible{0}==2     + [0 0 nchan_offs{0}] * scale !panLabelsMode{0} [7 14 73 9] [7 23 73 9] \
                                                                                                width_visible{0}!=0     + [nchan_offs_third{0}] + [nchan_offs_third{0}] * scale !panLabelsMode{0} [48 4 20 20] [48 7 20 20] [0]
      set mcp.width.fadermode                   gl_fader_swap
      set mcp.width.color                       gl_width_color
      set mcp.width.label                       ?narrowMode{0} \
                                                    !panLabelsMode{0} [0] + [0 mcp.width] width_visible{0}!=0 width_visible{0}==2 + [mcp.pan.label] * scale [0 11 35 9] h<hide_inputFX_s{0} [0] [3 25 35 9] [0] \
                                                    !panLabelsMode{0} [0] + [0 mcp.width] width_visible{0}!=0 width_visible{0}==2 + [mcp.pan.label] * scale [0 11 40 9] + [nchan_offs_third{0}] + * scale [-5 25 35 10] [mcp.width] [0]
      set mcp.width.label.color                 val_color
      set mcp.width.label.font                  scale==1 [1] scale==1.5 [6] [11]
      set mcp.width.label.margin                [0 0 0 0 0.5]
    set mcp.recinput                            h<hide_input_s{0} [0] + [in_sec in_sec nchan_offs{0}] * scale ?narrowMode{0} width_visible{0}==1 [0] [6 0 43 16] [6 0 75 16]
      set mcp.recinput.color                    ?track_selected [225 225 225] [200 200 200]
      set mcp.recinput.font                     scale==1 [1] scale==1.5 [6] [11]
      set mcp.recinput.margin                   * scale [4 0 15 0 0]
    set mcp.fxin                                ?narrowMode{0} [0] h<hide_inputFX_s{0} [0] + [mcp.recinput mcp.recinput] + [nchan_offs{0}] * scale [0 16 75 12]
    set mcp.recmode                             ?narrowMode{0} [0] + + [in_sec in_sec nchan_offs{0}] [0 mcp.fxin{3}] * scale + [6 4 41 16] mcp.recinput{3}>0 [0 16] [0 -4]
    set mcp.meter                               ?narrowMode{0} + * scale [4 4 20 -31] [stretch_sec stretch_sec nchan_offs{0} stretch_sec] \
                                                     + [stretch_sec stretch_sec nchan_offs{0} stretch_sec] * scale h<hide_volume_label_s{0} [4 4 20 -4] !labelsMode{0} [4 4 20 -4] [4 23 20 -23]
      set mcp.meter.vu.div                      [1 1]
      set mcp.meter.readout.color               !labelsMode{0} [0 0 0 0 0 0 0 0] [100 100 100 255 255 183 171 255]
      set mcp.meter.scale.color.lit.bottom      !labelsMode{0} [0 0 0 0 0 0 0 0] [0 0 0 170 0 0 0 0]
      set mcp.meter.scale.color.lit.top         !labelsMode{0} [0 0 0 0 0 0 0 0] [0 0 0 170 0 0 0 0]
      set mcp.meter.scale.color.unlit.bottom    !labelsMode{0} [0 0 0 0 0 0 0 0] ?recarm [255 64 0 255 0 0 0 0] [255 255 255 60 0 0 0 0]
      set mcp.meter.scale.color.unlit.top       !labelsMode{0} [0 0 0 0 0 0 0 0] ?recarm [255 64 0 255 0 0 0 0] [255 255 255 60 0 0 0 0]
    set mcp.volume.label                        ?narrowMode{0} [0] \
                                                    + [stretch_sec stretch_sec mcp.meter{2}] * scale h<hide_volume_label_s{0} [1 0 28 4] !labelsMode{0} [1 0 28 4] [1 0 28 23]
                                                    ; + h<hide_volume_label_s{0} [1 0 28 4] !labelsMode{0} [1 0 28 4] [1 0 28 23] [stretch_sec stretch_sec mcp.meter{2}]
      set mcp.volume                            ?narrowMode{0} + - + [stretch_sec stretch_sec] [nchan_offs_half stretch_sec{3}] * scale [-4 21] * scale [0 0 21 21] \
                                                    - + * [1 1 scale 1] [mcp.meter stretch_sec 21 stretch_sec] [mcp.meter{2} mcp.volume.label{3}] [-4 0 0 mcp.volume.label{3}]
      set mcp.volume.label.color                mcp.volume.label{h}>2 [100 100 100] [38 38 38]
      set mcp.volume.label.font                 scale==1 [1] scale==1.5 [6] [11]
      set mcp.volume.label.margin               * [scale scale scale scale 1] ?narrowMode{0} [0 80 0 0 0.5] [0 4 0 0 0.5]
    set mcp.recarm                              + * scale [0 0 36 24] ?narrowMode{0} - + [mcp.meter{2}] [stretch_sec stretch_sec] * scale [-1 17] \
                                                        + - [stretch_sec stretch_sec] * scale [-29 17] [mcp.meter{2}]
    set mcp.recmon                              + + [0 padding] [mcp.recarm mcp.recarm] * scale [7 20 21 20]
    set mcp.mute                                + + [0 padding] [mcp.recmon mcp.recmon] * scale [0 19 21 20]
    set mcp.solo                                + + [0 padding] [mcp.mute mcp.mute] * scale [0 21 21 20]
    set mcp_io_hide_h                           * scale 106
    set mcp.io                                  stretch_sec_height{0}<mcp_io_hide_h{0} [0] + + [0 padding] [mcp.solo mcp.solo] * scale !labelsMode{0} [-1 23 23 22] [-1 23 23 30]
    set mcp_env_hide_h                          * scale [125 141]
    set mcpHideEnv                              !labelsMode{0} stretch_sec_height{0}<mcp_env_hide_h{0} 1 0 stretch_sec_height{0}<mcp_env_hide_h{1} 1 0
    set mcp.env                                 ?mcpHideEnv{0} [0 0 0 0] + [0 stretch_sec{3}] + [mcp.io stretch_sec] * scale !labelsMode{0} [1 -22 21 22] [1 -30 21 30]
    set mcp_phase_hide_h                        * scale [144 162]
    set mcpHidePhase                            !labelsMode{0} stretch_sec_height{0}<mcp_phase_hide_h{0} 1 0 stretch_sec_height{0}<mcp_phase_hide_h{1} 1 0
    set mcp.phase                               ?mcpHidePhase{0} [0] + [mcp.env mcp.env] - * scale [3 -18 16 18] padding
    set mcp.label                               + + + * scale \
                                                    gapmode{0}==1 !sidebarMode{0} [14 0 -14 27]  [13 0 -13 27] \
                                                    gapmode{0}==2 [0 0 -14 27] \
                                                    [0 0 0 27] \
                                                    [0 bot_sec mcp.size{0}] \
                                                    ?mcp_control_align{0} * - mcp_maxfolderdepth folderdepth [0 0 0 mcp_indent_s{0}] [0]
      set mcp.label.margin                      * [scale scale scale scale 1] [4 0 4 3 0.5]
      set mcp.label.font                        scale==1 [3] scale==1.5 [8] [13]
    set mcp.trackidx                            + + [0 bot_sec] [0 mcp.label{3}] - [0 0 mcp.size{0} bot_sec_height{0}] [0 0 0 mcp.label{3}]
      set mcp.trackidx.margin                   + - [0 0 0 mcp.trackidx{3} 0.5] * scale [0 0 0 20] folderstate==1 * scale [12] [0]
      set mcp.trackidx.color                    ?track_selected [50 50 50] .
      set mcp.trackidx.font                     scale==1 [3] scale==1.5 [8] [13]
    set mcp.folder                              + + [0 bot_sec] [0 mcp.label{3}] folderstate<0 + + [mcp.size] [sidebar_sec{2}] * scale [-21 -2 21 22] * scale [0 -2 18 22]

endMacro


set hide_inputFX                [400]   ; height below which input effects is hidden.
set hide_input                  [350]   ; height below which input dropdown is hidden.
set hide_pan_labels             [320]   ; height below which pan labels are hidden.
set hide_pan                    [260]   ; height below which pan controls are hidden.
set hide_volume_label           [250]   ; height below which volume label is hidden.
set extmixer_w                  [86]    ; width of the extmixer when set as a sidebar

  ; sidebar (pushes other secs right)
  ; fx section (background is baked into mcp_bg)
  ; pan section
  ; input section (show/hide inputFX on resize / recarm, with user override)
  ; stretch section (recarm pokes above)
  ; bottom section (name resize on maxfolderdepth)

set mcp_indent              15
set mcp_control_align       1

doModeLogic sidebarMode     25
doModeLogic narrowMode      26
doModeLogic meterExpMode    27
doModeLogic labelsMode      28

set mcp_meterExp            4
set mcp_border              0

drawMcp 1


set mcp.volume.label.color    [240 240 240]
set mcp.pan.label.color       ?track_selected  [50 50 50]  [240 240 240]

set mcp.meter.readout.color             [240 240 240]
set mcp.meter.scale.color.unlit.bottom  [240 240 240]
set mcp.meter.scale.color.unlit.top     [240 240 240]



#<
#>--------------------------------- MASTER MIXER --------------------------------------

  ; --------------- User adjustable values. Edit without fear. -----------------

set hide_inputFX                [400] ; height below which input effects is hidden.
set hide_pan_labels             [320] ; height below which pan labels are hidden.
set hide_pan                    [260] ; height below which pan controls are hidden.
set hide_volume_label           [200] ; height below which volume label is hidden.

  ; ------- End of user adjustable values. From here on may be dragons. ---------

macro drawMasterMcp scale

    clear master.mcp.*
    front                                           master.mcp.menubutton master.mcp.io master.mcp.env master.mcp.mute master.mcp.solo
    set master.mcp.size                             + * scale [125 370] [0 0 0 mcp.size]
    set hide_pan_sm                                 * scale hide_pan
    set hide_pan_labels_sm                          * scale hide_pan_labels
    set fx_sec                                      + [0 0 master.mcp.size{0}] * scale [0 0 0 27]
    set pan_sec                                     + [0 fx_sec{3} master.mcp.size{0}] * scale h<hide_pan_labels_sm{0} h<hide_pan_sm{0} [0 0 0 6] [0 0 0 28] [0 0 0 48]
    set bot_sec                                     + [0 h master.mcp.size{0}] * scale [0 -23 0 23]
    set stretch_sec_start                           + fx_sec{3} pan_sec{3}
    set stretch_sec_height                          - - - h fx_sec{3} pan_sec{3} bot_sec{3}
    set stretch_sec                                 [0 stretch_sec_start{0} master.mcp.size{0} stretch_sec_height{0}]
    set padding_reduction_h                         * scale [300 200]
    set padding                                     * scale stretch_sec_height{0}<padding_reduction_h{0} stretch_sec_height{0}<padding_reduction_h{1} [0 2] [0 3] [0 4]
    set master.mcp.fx                               * scale [7 7 82 20]
    set master.mcp.fxbyp                            * scale [89 7 29 20]
    set master.mcp.pan                              + [0 pan_sec] * scale h<hide_pan_sm{0} [0]      width_visible{0}==2     h<hide_pan_labels_sm{0} [7 5 67 9] [7 15 67 9] \
                                                                                                width_visible{0}!=0     h<hide_pan_labels_sm{0} [20 4 20 20] [20 7 20 20] \
                                                                                                                    h<hide_pan_labels_sm{0} [31 4 20 20] [31 7 20 20]
      set master.mcp.pan.fadermode                  gl_fader_swap
      set master.mcp.pan.color                      gl_pan_color
      set master.mcp.pan.label                      h<hide_pan_labels_sm{x} [0] + [0 master.mcp.pan] * scale width_visible{0}!=0 width_visible{0}==2 [23 -11 35 9] [6 25 35 10] [23 25 35 10]
      set master.mcp.pan.label.color                [140 140 140]
      set master.mcp.pan.label.margin               [0 0 0 0 0.5]
      set master.mcp.pan.label.font                 scale==1 [1] scale==1.5 [6] [11]
    set master.mcp.width                            + [0 pan_sec] * scale h<hide_pan_sm{0} [0]      width_visible{0}==2     h<hide_pan_labels_sm{0} [7 13 67 9] [7 23 67 9] \
                                                                                                width_visible{0}!=0     h<hide_pan_labels_sm{0} [48 4 20 20] [48 7 20 20] [0]
      set master.mcp.width.fadermode                gl_fader_swap
      set master.mcp.width.color                    gl_width_color
      set master.mcp.width.label                    h<hide_pan_labels_sm{x} [0] + [0 master.mcp.width] * scale width_visible{0}!=0 width_visible{0}==2 [23 11 35 9] [41 25 35 10] [0]
      set master.mcp.width.label.color              [140 140 140]
      set master.mcp.width.label.margin             [0 0 0 0 0.5]
      set master.mcp.width.label.font               scale==1 [1] scale==1.5 [6] [11]
    set master.mcp.mono                             + [0 pan_sec] * scale h<hide_pan_labels_sm{0} h<hide_pan_sm{0} [0] [93 4 25 22] [93 8 25 33]
    set master.mcp.volume.label                     h<hide_volume_label{0} [0 0 0 0] + [0 stretch_sec] * scale [1 0 89 23]
      set master.mcp.volume                         - + + * scale [69 0 21] [0 stretch_sec 0 stretch_sec] [0 master.mcp.volume.label{3}] [0 0 0 master.mcp.volume.label{3}]
      set master.mcp.volume.label.color             master.mcp.volume.label{h}>2 [100 100 100] [38 38 38]
      set master.mcp.volume.label.margin            + [0 0 0 0 0.5] * scale [0 4]
      set master.mcp.volume.label.font              scale==1 [1] scale==1.5 [6] [11]
    set master.mcp.meter                            + [0 master.mcp.volume 0 master.mcp.volume] * scale [4 0 59 -6]
      set master.mcp.meter.vu.div                   [1]
      set master.mcp.meter.vu.rmsdiv                [2]
      set master.mcp.meter.readout.color            [255 255 255 200 0 0 0 0]
      set master.mcp.meter.rmsreadout.color         [255 255 255 255 0 0 0 0]
      set master.mcp.meter.scale.color.lit.bottom   [0 0 0 200 0 0 0 0]
      set master.mcp.meter.scale.color.lit.top      [0 0 0 200 0 0 0 0]
      set master.mcp.meter.scale.color.unlit.bottom [255 255 255 120 0 0 0 0]
      set master.mcp.meter.scale.color.unlit.top    [255 255 255 120 0 0 0 0]
    set master.mcp.label                            bot_sec
      set master.mcp.label.color                    [184 184 184]
      set master.mcp.label.margin                   + * scale [20 1] [0 0 0 0 0.5]
      set master.mcp.label.font                     scale==1 [3] scale==1.5 [8] [13]
    set master.mcp.mute                             + [0 stretch_sec] * scale [95 6 21 20]
    set master.mcp.solo                             + + [0 padding] [master.mcp.mute master.mcp.mute] * scale [0 21 21 20]
    set master_mcp_env_hide_h                       * scale 141
    set master.mcp.env                              stretch_sec_height{0}<master_mcp_env_hide_h{0} [0] + + [0 stretch_sec] [0 stretch_sec{3}] * scale [95 -37 21 30]
    set master_mcp_io_hide_h                        * scale 106
    set master.mcp.io                               stretch_sec_height{0}<master_mcp_io_hide_h{0} [0] + + [0 padding] [master.mcp.solo master.mcp.solo] * scale [0 23 23 30]
    set master.mcp.menubutton                       + * scale [0 2 20 20] [bot_sec bot_sec]
    set master.mcp.extmixer.mode                    [0]
        set master.mcp.fxlist.font                  scale==1 [1 16 0 0 0 0 1 4] scale==1.5 [6 24 0 0 0 0 2 6] [11 32 0 0 0 0 2 8]
        set master.mcp.fxlist.margin                mcp.fxlist.margin 
        set master.mcp.sendlist.font                scale==1 [1 16 0 0 0 0 1 4] scale==1.5 [6 24 0 0 0 0 2 6] [11 32 0 0 0 0 2 8]
        set master.mcp.sendlist.margin              mcp.sendlist.margin
        set master.mcp.fxparm.font                  scale{0}==1 [1 24 0 0 -1] scale{0}==1.5 [6 36 0 0 -4] [11 48 0 0 -6]
        set master.mcp.fxparm.font                  + . os_type==1 * scale [0 0 0 0 3] [0]
        set master.mcp.fxparm.margin                mcp.fxparm.margin
endmacro

drawMasterMcp 1


set master.mcp.volume.label.color              [240 240 240]
set master.mcp.pan.label.color                 [240 240 240]

set master.mcp.meter.readout.color             [240 240 0]
set master.mcp.meter.scale.color.unlit.bottom  [220 220 220]
set master.mcp.meter.scale.color.unlit.top     [220 220 220]




#<
#>---------------------------------- TRANSPORT ----------------------------------------

;returns [padding x, padding y, width, height, width + padding x]
macro size element   px  py  w  h
  set size_##element  + [px py w h px] [0 0 0 0 w]
endmacro

macro drawTransport
    clear trans.*
    set trans.size                  [100 100]
    
    set status_min                  300     ; the size below which status readout looks weird
    set text_color                  [200 200 200]   ; the color of the text
    
    set trans_rateSize              170
    set trans_rateSize              trans_rateSize{0}
    set trans_rateSize_padded       + trans_rateSize{0} 3
    set size_rate                   + [3 1 0 44] [0 0 trans_rateSize{0} 0 trans_rateSize_padded{0}]

    ; Set absolute sizes...
    ;     element     px  py   w    h
    size  rew         4   10   29   29
    size  fwd         0   10   28   29
    size  rec         0   7    34   35
    size  play        0   7    33   35
    size  repeat      0   10   27   29
    size  stop        0   10   29   29
    size  pause       0   10   29   29
    
    size  automode    2   0    54   44
    
    size  status      6   2    450  44
    size  bpm         0   1    54   44
    size  timesig     2   1    50   44
    size  selection   0   10   350  24

    set row_height                  [48]
    set row_height_x2               * 2 row_height

    ; size the sections
    set sec_buttons_width           + + + + + + size_rew{4} size_fwd{4} size_stop{4} size_play{4} size_pause{4} size_rec{4} size_repeat{4}
    set sec_buttons                 [0 0 sec_buttons_width{0}]
    set sec_proj_width              + + + size_bpm{4}  size_timesig{4}  size_rate{4}  size_automode{4}
    set sec_proj                    [0 0 sec_proj_width{0} row_height{0}]
    set all_width                   + + + + sec_buttons_width  size_status{4}  sec_proj_width  size_selection{4}  [380]
    set buttons_proj_width          + sec_buttons_width sec_proj_width
    set buttons_proj_cutoff         - buttons_proj_width{0} w
    
    set w_btn_stat_sel              + + + sec_buttons_width  size_status{4}  size_selection{4}  [30]
    set w_btn_stat                  + + sec_buttons_width  size_status{4}  [30]
    set w_bpm_sel                   + + sec_proj_width  size_selection{4}  [20]

    set w_stretch                   - all_width w
    set sec_status_width            - h<row_height_x2{0} w<all_width{0}  - size_status{4}  * w_stretch 0.6  size_status{4}  size_status{4}  size_status{0}
    
    set sec_sel_width               h<row_height_x2{0}  size_selection{4} size_selection{4}
    set sec_sel                     [0 0 sec_sel_width{0}]

    ; layout the sections
    set sec_status                  [sec_buttons{2} 0 sec_status_width{0} size_status]
    set sec_status                  + sec_status  w<all_width{0} h<row_height_x2{0}  [10] [20] [20]
    set sec_sel                     - [w size_selection sec_sel size_selection] [sec_sel{2}]

    set trans_min_width             sec_proj_width{0}
    set trans.size.dockedheight     row_height{0}
    set trans.size.minmax           [trans_min_width row_height{0} 10000 row_height_x2{0}]
    
    ; multi-rows layout
    set centered_bpm                w<all_width{0}  h>=row_height_x2{0}  0  1  1
    set sec_proj                    !centered_bpm{0}  + [0 row_height{0}] [6 sec_proj sec_proj sec_proj]
    set sec_sel                     w<w_btn_stat_sel{0}  h>=row_height_x2{0}   +  - + [trans.status{x}] [trans.status{w}] [sec_sel{w}]   + [0 row_height{0}]  [0 sec_sel sec_sel sec_sel]
    set sec_sel                     w<w_bpm_sel{0}  h>=row_height_x2{0}  [0]
    set sec_status                  w<w_btn_stat{0} h>=row_height_x2{0}  - [sec_status sec_status sec_status sec_status]  + - [0 0 w_btn_stat] [0 0 w] [0 0 30]
    set sec_status                  w<w_btn_stat{0} h>=row_height_x2{0}  sec_status{w}<status_min{0}  [0]
    
    ; put status where selection previously was, if status is overlapped by the centered bpm block
    set sec_status                  sec_status_width{0}<status_min{0}  - [sec_sel -2 sec_sel sec_status] [0 0 20]
    set sec_sel                     sec_status_width{0}<status_min{0}  [0]
    
    ; draw content in sec_buttons
    set trans.rew                   +   [sec_buttons sec_buttons]   [size_rew size_rew size_rew size_rew]
    set trans.fwd                   + + [trans.rew sec_buttons]     [size_rew{2}]  [size_fwd size_fwd size_fwd size_fwd]
    set trans.rec                   + + [trans.fwd sec_buttons]     [size_fwd{2}]  [size_rec size_rec size_rec size_rec]
    set trans.play                  + + [trans.rec sec_buttons]     [size_rec{2}]  [size_play size_play size_play size_play]
    set trans.repeat                + + [trans.play sec_buttons]    [size_play{2}]  [size_repeat size_repeat size_repeat size_repeat]
    set trans.stop                  + + [trans.repeat sec_buttons]  [size_repeat{2}]  [size_stop size_stop size_stop size_stop]
    set trans.pause                 + + [trans.stop sec_buttons]    [size_stop{2}]  [size_pause size_pause size_pause size_pause]

    ; draw content in sec_status
    set trans.status                + [sec_status sec_status sec_status sec_status] [size_status size_status]

    ; draw content in sec_proj
    set bmp_left                    sec_proj{0}
    set bmp_left                    ?centered_bpm{0}  * [0.5] - - - - - [w] [size_bpm{w}] [size_timesig{w}] [size_automode{w}] [size_rate{w}] [10]
    
    set trans_bpm                   + + [bmp_left] [0 sec_proj] [size_bpm size_bpm size_bpm size_bpm]
      set trans.bpm.tap             sec_proj{2}==0 [0]  * [1 1 1 0.5] trans_bpm
      set trans.bpm.edit            sec_proj{2}==0 [0]  + trans.bpm.tap [0 trans.bpm.tap{h}]
    set trans.curtimesig            sec_proj{2}==0 [0] + [6] + + [trans_bpm sec_proj] [size_bpm{2}] [size_timesig size_timesig size_timesig size_timesig]
    set trans.automode              sec_proj{2}==0 [0] + [6] + + [trans.curtimesig sec_proj]] [size_timesig{2}] [size_automode size_automode size_automode size_automode]
    set trans_rate                  + [6] + + [trans.automode sec_proj] [size_automode{2}] [size_rate size_rate size_rate size_rate]
      set rate_cutoff               - + trans_rate{0} trans_rate{2} w
      set trans_rate                rate_cutoff{0}>0 - trans_rate [0 0 rate_cutoff{0}] .
      set trans.rate                sec_proj{2}==0 [0]   + [trans_rate trans_rate] + [-3 0 0 0] [52 0 100 44]
      set trans.rate.fader          sec_proj{2}==0 [0]   + [trans_rate trans_rate] [3 3 40 40]
      set trans.rate.fader.fadermode  1

    ; draw content in sec_sel
    set trans.sel                   sec_sel

    ; >>> Fonts/Colors/Margins
    set trans.curtimesig.color      + text_color [0 0 0 0 43 43 43 255]
    set trans.bpm.tap.color         [190 190 190]
    set trans.bpm.edit.color        [230 230 230]
    set trans.rate.fader.color      [255 255 255]
    set trans.rate.color            text_color
    set trans.sel.color             text_color
    
    ; Ubuntu-Bold-12
    set trans.sel.font              [4]
    set trans.bpm.tap.font          [4]
    set trans.bpm.edit.font         [4]
    set trans.curtimesig.font       [4]
    ; Tahoma-Bold-10
    set trans.rate.font             [3]
    
    set trans.status.margin         os_type==1  [0 4 0 -4 0] [0 0 0 0 0]
    set trans.sel.margin            [4 0 4 0 1]
    set trans.bpm.tap.margin        [0 1 0 0 0.5]
    set trans.bpm.edit.margin       [0 0 0 3 0.5]
    
    ; >>> Hide rules
    ; == distance between main (play/pause) and secondary (bpm/timesig) button groups; if <0 they overlap
    set btn_group_distance  h<row_height_x2{0}  - trans.bpm.tap{x}  + trans.pause{x} trans.pause{w}  0

    set trans.rew           btn_group_distance{0}<0   [0]
    set trans.fwd           btn_group_distance{0}<0   [0]
    set trans.rec           btn_group_distance{0}<0   [0]
    set trans.play          btn_group_distance{0}<0   [0]
    set trans.repeat        btn_group_distance{0}<0   [0]
    set trans.stop          btn_group_distance{0}<0   [0]
    set trans.pause         btn_group_distance{0}<0   [0]

    set trans.bpm.tap       btn_group_distance{0}<0     [6 trans.bpm.tap trans.bpm.tap trans.bpm.tap]
    set trans.bpm.edit      btn_group_distance{0}<0     [6 trans.bpm.edit trans.bpm.edit trans.bpm.edit]
    set trans.curtimesig    btn_group_distance{0}<0   + [6 trans.curtimesig trans.curtimesig trans.curtimesig]   + [trans.bpm.edit]    [trans.bpm.edit{w}]
    set trans.automode      btn_group_distance{0}<0   + [6 trans.automode trans.automode trans.automode]         + [trans.curtimesig]  [trans.curtimesig{w}]
    set trans.rate.fader    btn_group_distance{0}<0   + [6 trans.rate.fader trans.rate.fader trans.rate.fader]   + [trans.automode]    [trans.automode{w}]
    set trans.rate          btn_group_distance{0}<0   + [6 trans.rate trans.rate trans.rate]                     + [trans.rate.fader]  [trans.rate.fader{w}]

    ; == calc distance between secondary buttons and status (when the status is in the right corner)
    set bpm_group_end           + trans.rate{x} trans.rate{w}
    set status_btns_distance    sec_status_width{0}<status_min{0}   - trans.status{x} bpm_group_end   0
    set trans.status            status_btns_distance{0}<0    + - [0 0 w] [0 0 bpm_group_end]  + [bpm_group_end] [0 trans.status -10 trans.status]

    ; == hide status on small width
    set trans.status        btn_group_distance{0}<0  trans.status{w}<status_min{0}  [0]
endMacro

drawTransport
